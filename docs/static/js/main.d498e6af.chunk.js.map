{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","todos","handleDelete","handleToggle","i","className","onClick","desc","TodoList","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d498e6af.chunk.js","sourcesContent":["\r\nexport const todoReducer = (state =[], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload]\r\n\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n\r\n        case 'toggle':\r\n            return state.map(todo => \r\n                (todo.id === action.payload)\r\n                    ? {...todo, done: !todo.done}\r\n                    : todo\r\n            )\r\n        \r\n            case 'toggle-old':\r\n            return state.map(todo=>{\r\n                if(todo.id === action.payload){\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                }else{\r\n                    return todo; //si no regresa nada, el map devuelve undefined\r\n                }\r\n            })\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const TodoListItem = ({todos, handleDelete, handleToggle}) => {\r\n    return (\r\n        <>\r\n            {\r\n                todos.map((todo, i) =>(\r\n                    <li\r\n                        key={todo.id}\r\n                        className='list-group-item'\r\n                    >\r\n                        <p \r\n                            className={`${todo.done && 'complete'}`}\r\n                            onClick={()=> handleToggle(todo.id)}\r\n                        >\r\n                            {i+1}. {todo.desc}\r\n                        </p>\r\n                        <button \r\n                            className='btn btn-danger'\r\n                            onClick={() => handleDelete(todo.id)}\r\n                        >\r\n                            Borrar\r\n                        </button>\r\n                    </li>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\r\n    return (\r\n        <ul className='list-group list-group-flush'>\r\n            <TodoListItem \r\n                todos={todos}\r\n                handleDelete={handleDelete} \r\n                handleToggle={handleToggle} \r\n            /> \r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const TodoAdd = ({handleAddTodo}) => {\r\n    \r\n    const [{description}, handleInputChange, reset] = useForm({ //desestruc de formValues (es un objeto)\r\n        description: ''\r\n    })\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(description.trim().length < 1){\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        \r\n        handleAddTodo(newTodo);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4 className='mt-1 mb-1'>Agregar tarea</h4>\r\n                    <hr />\r\n                    \r\n                    <form onSubmit={handleSubmit}>\r\n                        <input \r\n                            className='form-control mt-2 mb-2'\r\n                            type='text'\r\n                            name='description'\r\n                            placeholder='Ingrese tarea'\r\n                            autoComplete='off'\r\n                            value={description}\r\n                            onChange= {handleInputChange}\r\n                        />\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-outline-primary mb-3 mt-1 btn-block'\r\n                        >\r\n                            Agregar\r\n                        </button>\r\n                    </form>\r\n        </>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n    \r\n    const handleInputChange = ({target}) => { //deses de Obj \"e\"\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React, {useReducer, useEffect} from 'react'\r\nimport { todoReducer } from './todoReducer';\r\n\r\nimport './styles.css'\r\nimport { TodoList } from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\n\r\n\r\nconst init = () => { //cuando se recarga el navegador, se ejecuta esta funcion, que lee el LS\r\n    \r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n    \r\n}\r\n\r\nexport const TodoApp = () => {\r\n    \r\n    const [todos, dispatch] = useReducer(todoReducer, [], init)\r\n\r\n    \r\n\r\n\r\n    useEffect(() => { //se encarga de grabar todo cambio que ocurra en 'todos'\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    const handleDelete = (todoId) => {\r\n        console.log(todoId);\r\n\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch(action)\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        })\r\n    }\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n        \r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <h1>TodoApp ({todos.length})</h1>\r\n            <hr />\r\n\r\n            <div className='row'>\r\n                <div className='col-7'>\r\n                    <TodoList todos={todos} handleDelete={handleDelete} handleToggle={handleToggle} />\r\n                </div>\r\n                <div className='col-5 contenedor-form'>\r\n                    <TodoAdd  handleAddTodo={handleAddTodo}/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import HookApp from './HookApp';\n//import CounterApp from './components/01-useState/CounterApp';\n//import { SimpleForm } from './components/02-useEffect/SimpleForm';\n//import { FormWithCustomHook } from './components/02-useEffect/FormWithCustomHook';\n//import { MultipleCustomHooks } from './components/examples/MultipleCustomHooks';\n//import { FocusScreen } from './components/04-useRef/FocusScreen';\n//import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n//import { Layout } from './components/05-useLayoutEffect/Layout';\n//import { Memorize } from './components/06-memos/Memorize';\n//import { MemoHook } from './components/06-memos/MemoHook';\n//import { CallbakHook } from './components/06-memos/CallbakHook';\n//import { Padre } from './components/07-tarea-memo/Padre';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n\n\nReactDOM.render(\n\n  <TodoApp />,\n  document.getElementById('root')\n\n); \n\n\n"],"sourceRoot":""}